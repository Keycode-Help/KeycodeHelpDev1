# Supabase Production Configuration
# Use environment variables for security

# Disable H2 console since we're using PostgreSQL
spring.h2.console.enabled=false

# Debug: Log what we're seeing
logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG
logging.level.org.springframework.boot.autoconfigure.orm.jpa=DEBUG

# Database Configuration for Supabase
spring.datasource.url=${SPRING_DATASOURCE_URL:${DATABASE_URL}}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${DATABASE_USERNAME}}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${DATABASE_PASSWORD}}
spring.datasource.driver-class-name=org.postgresql.Driver

# Additional PostgreSQL connection properties for slow connections
spring.datasource.hikari.data-source-properties.socketTimeout=60
spring.datasource.hikari.data-source-properties.loginTimeout=60
spring.datasource.hikari.data-source-properties.connectTimeout=60
spring.datasource.hikari.data-source-properties.sslmode=require

# JPA/Hibernate Configuration for PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database=POSTGRESQL

# Use default HikariCP configuration to avoid conflicts

# JWT Configuration
jwt.secret=${JWT_SECRET:YOUR_JWT_SECRET_KEY_HERE}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Super Admin Setup Key (only needed during initial setup)
SUPER_ADMIN_SETUP_KEY=${SUPER_ADMIN_SETUP_KEY:YOUR_SECURE_SETUP_KEY_HERE}

# Logging Configuration
logging.level.org.springframework.security=INFO
logging.level.org.rma.kchbackend=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=/

# CORS Configuration
spring.web.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS:https://keycode.help,https://app.keycode.help,https://keycode-help-dev1.vercel.app}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# File Upload Configuration - per file limit: 5MB, total request limit: 25MB
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=25MB

# Email Configuration
spring.mail.host=${MAIL_HOST:smtp-relay.brevo.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:${BREVO_USERNAME:}}
spring.mail.password=${MAIL_PASSWORD:${BREVO_API_KEY:}}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Stripe Configuration
stripe.secret.key=${STRIPE_SECRET_KEY:YOUR_STRIPE_SECRET_KEY}
stripe.publishable.key=${STRIPE_PUBLISHABLE_KEY:YOUR_STRIPE_PUBLISHABLE_KEY}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET:YOUR_STRIPE_WEBHOOK_SECRET}

# Twilio SMS Configuration
twilio.account.sid=${TWILIO_ACCOUNT_SID:}
twilio.auth.token=${TWILIO_AUTH_TOKEN:}
twilio.phone.number=${TWILIO_PHONE_NUMBER:}

# Schema initialization - enabled for automatic setup
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.jpa.defer-datasource-initialization=true
