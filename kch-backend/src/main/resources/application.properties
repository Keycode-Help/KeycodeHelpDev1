spring.application.name=kch-backend

# Use "supabase" by default (prod on Render). Locally you can override to "dev".
spring.profiles.active=${SPRING_PROFILES_ACTIVE:supabase}

# Disable H2 console since we're using PostgreSQL
spring.h2.console.enabled=false

# Bind to Render's dynamic port; locally it falls back to 8080
server.port=${PORT:8080}

# File upload - per file limit: 5MB, total request limit: 25MB
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=25MB

# Stripe (keys will be overridden via env on Render/Vercel)
stripe.secret.key=${STRIPE_SECRET_KEY:sk_test_your_stripe_secret_key_here}
stripe.publishable.key=${STRIPE_PUBLISHABLE_KEY:pk_test_your_stripe_publishable_key_here}

# Twilio SMS Configuration (keys will be overridden via env on Render)
twilio.account.sid=${TWILIO_ACCOUNT_SID:}
twilio.auth.token=${TWILIO_AUTH_TOKEN:}
twilio.phone.number=${TWILIO_PHONE_NUMBER:}

# Logging
logging.level.org.springframework.web=INFO
logging.level.org.rma.kchbackend=INFO

# Actuator (for Render health checks)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true

# JPA defaults (shared) - REMOVED to avoid conflicts with profile-specific settings
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=none
# spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Schema initialization
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
# Temporarily disable data loading until schema is stable
# spring.sql.init.data-locations=classpath:data.sql
spring.jpa.defer-datasource-initialization=true
spring.sql.init.data-locations=
